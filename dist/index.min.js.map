{"version":3,"file":"index.min.js","sources":["../src/path.js","../src/query.js","../src/utils.js","../src/route.js","../src/router-mixin.js","../src/router-link.js","../src/router.js"],"sourcesContent":["const MATCH_ALL = '[^/]*';\r\n\r\nconst CATCH_ALL = '([^/]+)';\r\n\r\nconst PARAMETER_PATTERN = /:([^\\/]+)/;\r\n\r\n// optional trailing slash\r\n// only matches the slash if nothing follows\r\nconst MATCH_TRAILING_SLASH = '(?:[\\/]?(?=$))?';\r\n\r\n// implements '**' as a wildcard\r\nconst WILDCARD_PATTERN = /\\*\\*/g;\r\n\r\nexport class Path {\r\n  /**\r\n   * \r\n   * @param {String} input The path to compile\r\n   * @param {Boolean} exact Whether or not the pattern should match anything after the path\r\n   */\r\n  constructor(path, exact = false) {\r\n    // replace any wildcards with\r\n    // their corresponding expression\r\n    path = path.replace(WILDCARD_PATTERN, MATCH_ALL);\r\n    \r\n    let match;\r\n    let keys = [];\r\n    // convert :param to a catch-all group\r\n    // and save the keys\r\n    while ((match = PARAMETER_PATTERN.exec(path)) != null) {\r\n      path = path.replace(match[0], CATCH_ALL);\r\n      keys.push(match[1]);\r\n    }\r\n\r\n    if (!path.endsWith('/')) {\r\n      path += MATCH_TRAILING_SLASH;\r\n    }\r\n\r\n    path = exact ? `^${path}$` : `^${path}`;\r\n    const pattern = new RegExp(path, 'i');\r\n\r\n    this.pattern = pattern;\r\n    this.keys = keys;\r\n  }\r\n\r\n  /**\r\n   * Convenience function that mirrors RegExp.test\r\n   * @param {String} path\r\n   * @return {Boolean} \r\n   */\r\n  matches(path) {\r\n    return this.pattern.test(path);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {String} path Path to match against.\r\n   * @return {String} Matched portion of the path. \r\n   */\r\n  matched(path) {\r\n    return this.pattern.exec(path)[0];\r\n  }\r\n\r\n  /**\r\n   * @param {String} url The path to get values from\r\n   * @return {ParsedExpression} A collection of functions for working with the url\r\n   */\r\n  parse(url) {\r\n    return new ParsedExpression(\r\n      url,\r\n      this.pattern,\r\n      this.keys\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {String} target A path, potentially with unresolved parameters \r\n   * @param {String} current The path that was matched\r\n   * @return {String} The target path with parameters filled in\r\n   */\r\n  transfer(current, target) {\r\n    const values = this.pattern.exec(current).slice(1);\r\n    let transferred = target;\r\n\r\n    let i = values.length;\r\n    while (i--) {\r\n      transferred = transferred\r\n        .replace(':' + this.keys[i], values[i]);\r\n    }\r\n\r\n    return transferred;\r\n  }\r\n}\r\n\r\nclass ParsedExpression {\r\n  constructor(url, pattern, keys) {\r\n    this.values = pattern.exec(url).slice(1);\r\n    this.url = url;\r\n    this.keys = keys;\r\n    this.map = new Map();\r\n  }\r\n\r\n  get(key) {\r\n    return this.values[this.keys.indexOf(key)];\r\n  }\r\n\r\n  set(key, value) {\r\n    return this.url.replace(this.get(key), value);\r\n  }\r\n\r\n  has(key) {\r\n    return this.get(key) !== undefined;\r\n  }\r\n\r\n  all() {\r\n    return this.keys.reduce((entries, key, i) => {\r\n      entries[key] = this.values[i];\r\n      return entries;\r\n    }, {});\r\n  }\r\n\r\n  entries() {\r\n    return this.keys.map(key => [key, this.get(key)]);\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n    const length = this.keys.length;\r\n    for (let i = 0; i < length; i++) {\r\n      yield [this.keys[i], this.values[i]];\r\n    }\r\n  }\r\n}\r\n\r\nexport default Path;","export class Query extends Map {\r\n  static from(object) {\r\n    return new Query(Object.entries(object));\r\n  }\r\n\r\n  static of(...pairs) {\r\n    return new Query(pairs);\r\n  }\r\n\r\n  static parse(string) {\r\n    if (string.startsWith('?')) {\r\n      string = string.substring(1);\r\n    }\r\n\r\n    let entries = [];\r\n    if (string !== '') {\r\n      entries = string.split('&')\r\n        .map((substring) => substring.split('='));\r\n    }\r\n\r\n    return new Query(entries);\r\n  }\r\n\r\n  toString() {\r\n    let string = '';\r\n    for (const [key, value] of this) {\r\n      string += `&${key}=${value}`;\r\n    }\r\n    return string.substring(1);\r\n  }\r\n}","/**\r\n * Append a leading slash, and remove all excess slashes.\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\nexport function normalize(path) {\r\n  return ('/' + path).replace(/[\\/]+/g, '/');\r\n}\r\n\r\n/**\r\n * Determines if the given object is a callable function.\r\n * An ES2015 class will return false, while ordinary functions,\r\n * arrow functions, generator functions and async functions return true.\r\n * @param {object} object the object that is to be inspected\r\n * @returns {boolean}\r\n */\r\nexport function isFunction(object) {\r\n  if (!(typeof object === 'function')) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Truthiness matrix for `hasOwnProperty` on functions:\r\n   * \r\n   *           | Class | Ordinary | Arrow | Async | Generator |\r\n   * ---------------------------------------------------------|\r\n   * arguments | false |   true   | false | false |   false   |\r\n   * prototype | true  |   true   | false | false |   true    |\r\n   * \r\n   */\r\n\r\n  const tag = object[Symbol.toStringTag];\r\n  // First it is determined if it's an async or generator function.\r\n  // Generator functions and classes have the same properties,\r\n  // so using the tag is needed.\r\n  // An async function can also be identified with this method, so it\r\n  // is also done here for convenience.\r\n  // Ordinary functions, arrow functions and classes cannot be identified\r\n  // with this method.\r\n  if (tag === 'AsyncFunction' || tag === 'GeneratorFunction') {\r\n    return true;\r\n  } else {\r\n    // Ordinary functions have an `arguments` property, which classes do not.\r\n    const isNormalFunction = object.hasOwnProperty('arguments');\r\n    // Arrow functions do not have a `prototype` property, which classes do.\r\n    const isArrowFunction = !object.hasOwnProperty('prototype');\r\n    return isNormalFunction || isArrowFunction;\r\n  }\r\n}\r\n\r\nexport function isPromise(object) {\r\n  return object[Symbol.toStringTag] === 'Promise';\r\n}\r\n\r\nconst components = new WeakMap();\r\n\r\n/**\r\n * Resolve an identifier to a class.\r\n * @param {Promise|Function|String} component The identifier\r\n * @param {Function} callback\r\n */\r\nexport function load(component, callback) {\r\n  if (typeof component === 'string') {\r\n    // If it's a string, assume that it has\r\n    // been defined, and return the class\r\n    // associated with the tag to allow\r\n    // uniform callback function signature.\r\n    callback(customelements.get(component));\r\n\r\n  } else if (components.has(component)) {\r\n    // If it has been resolved before,\r\n    // return the resolved value.\r\n    callback(components.get(component));\r\n\r\n  } else if (isFunction(component)) {\r\n    // If it's a function, call it.\r\n    let called = component();\r\n    if (isPromise(called)) {\r\n      // If the function returns a promise,\r\n      // assume that it is a module and assume\r\n      // the component is the default export.\r\n      called.then((m) => {\r\n        components.set(component, m.default);\r\n        callback(m.default);\r\n      });\r\n    } else {\r\n      // If the function call returned something\r\n      // that isn't a promise, assume that it returned\r\n      // a component directly.\r\n      components.set(component, called);\r\n      callback(called);\r\n    }\r\n  } else {\r\n    callback(component);\r\n  }\r\n}\r\n","import { Path } from './path.js';\r\nimport { Query } from './query.js';\r\nimport { load, normalize } from './utils.js';\r\n\r\nexport class Route extends Path {\r\n  constructor(options) {\r\n    super(options.path, options.exact);\r\n    this.path = options.path;\r\n    this.component = options.component;\r\n    this.children = options.children || [];\r\n    this.slot = options.slot;\r\n    this.meta = Object.freeze(options.meta || {});\r\n    this.properties = Object.freeze(options.properties || {});\r\n  }\r\n\r\n  async import() {\r\n    return new Promise((resolve) => {\r\n      load(this.component, (Component) => resolve(Component));\r\n    });\r\n  }\r\n}\r\n\r\nexport class Routes {\r\n  constructor(records) {\r\n    this.routes = records.map(record => this.define(record));\r\n  }\r\n\r\n  define(record, parent) {\r\n    if (parent != null) {\r\n      if (record.path === '') {\r\n        record.path = parent.path;\r\n      } else {\r\n        record.path = normalize(parent.path + '/' + record.path);\r\n      }\r\n    }\r\n\r\n    if (record.children != null) {\r\n      record.children = record.children\r\n        .map(child => this.define(child, record));\r\n    } else {\r\n      record.exact = true;\r\n    }\r\n    \r\n    return new Route(record);\r\n  }\r\n\r\n  [Symbol.iterator]() {\r\n    return this.routes[Symbol.iterator]();\r\n  }\r\n}\r\n\r\nexport class ActiveRoute {\r\n  constructor(route, url) {\r\n    this.parameters = route.parse(url);\r\n    this.matched = route.matched(url);\r\n    this.query = Query.parse(url);\r\n    this.hash = location.hash.substring(1);\r\n  }\r\n}","export const RouterMixin = (SuperClass) => (class extends SuperClass {\r\n  constructor() {\r\n    super();\r\n    this.router = window.Router;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const root = this.getRootNode();\r\n    const host = root.host;\r\n    if (host && host.route) {\r\n      this.route = host.route;\r\n    }\r\n    if (super.connectedCallback) {\r\n      super.connectedCallback();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (super.disconnectedCallback) {\r\n      super.disconnectedCallback();\r\n    }\r\n  }\r\n});","import { RouterMixin } from './router-mixin.js';\r\n\r\nexport class RouterLinkElement extends RouterMixin(HTMLElement) {\r\n  constructor() {\r\n    super();\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  set to(v) {\r\n    this.setAttribute('to', v);\r\n  }\r\n\r\n  get to() {\r\n    return this.getAttribute('to');\r\n  }\r\n\r\n  set exact(v) {\r\n    this.toggleAttribute('exact', v);\r\n  }\r\n\r\n  get exact() {\r\n    return this.hasAttribute('exact');\r\n  }\r\n\r\n  set active(v) {\r\n    this.toggleAttribute('active', v);\r\n  }\r\n\r\n  get active() {\r\n    return this.hasAttribute('active');\r\n  }\r\n\r\n  set disabled(v) {\r\n    this.toggleAttribute('disabled', v);\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.addEventListener('click', this.onClick);\r\n    addEventListener('location-change', this.onChange);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    removeEventListener('location-change', this.onChange);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onClick() {\r\n    if (this.disabled) {\r\n      return;\r\n    } else {\r\n      this.router.push(this.href);\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    const url = decodeURIComponent(location.pathname);\r\n    if (this.href.startsWith('/')) {\r\n      this.active = this.exact\r\n        ? url === this.href\r\n        : url.startsWith(this.href);\r\n    } else {\r\n      this.active = url.endsWith(this.href);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RouterLinkElement;","import { Routes, ActiveRoute } from './route.js';\r\n\r\nconst EMPTY = Object.create(null);\r\n\r\nexport class Router {\r\n  constructor(records, target) {\r\n    this.views = [];\r\n    this.routes = [];\r\n    this.activeRoutes = [];\r\n    this.target = target;\r\n    this.routes = new Routes(records);\r\n\r\n    window.addEventListener('popstate', () => {\r\n      const url = decodeURIComponent(location.pathname);\r\n      const matched = this.resolve(url);\r\n      this.render(matched, url);\r\n    });\r\n\r\n    window.Router = this;\r\n\r\n    const url = decodeURIComponent(location.pathname);\r\n    const matched = this.resolve(url);\r\n    this.render(matched, url);\r\n  }\r\n\r\n  push(url, { data, title } = EMPTY) {\r\n    history.pushState(data, title, url);\r\n    const path = decodeURIComponent(location.pathname);\r\n    const matched = this.resolve(path);\r\n    this.render(matched, path);\r\n  }\r\n\r\n  replace(url, { data, title } = EMPTY) {\r\n    history.replaceState(data, title, url);\r\n    const path = decodeURIComponent(location.pathname);\r\n    const matched = this.resolve(path);\r\n    this.render(matched, path);\r\n  }\r\n\r\n  resolve(url) {\r\n    let matched = [];\r\n    const flatten = (route) => {\r\n      let matches = route.matches(url);\r\n      if (matches) {\r\n        matched.push(route);\r\n        if (route.children != null) {\r\n          for (const child of route.children) {\r\n            flatten(child);\r\n          }\r\n        }\r\n      }\r\n      return matches;\r\n    }\r\n\r\n    for (const route of this.routes) {\r\n      if (flatten(route)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return matched;\r\n  }\r\n\r\n  async render(matched, url) {\r\n    // Importing early in case both network\r\n    // and device is slow, but not awaiting\r\n    // it just yet.\r\n    const load = Promise.all(\r\n      matched.map(route => route.import())\r\n    );\r\n\r\n    console.time('render');\r\n    // Find the index at which the matched routes\r\n    // differ from the active routes.\r\n    let start;\r\n    for (let i = 0; i < matched.length; i++) {\r\n      const match = matched[i];\r\n      if (this.activeRoutes.length < i + 1) {\r\n        start = i;\r\n        break;\r\n      } else {\r\n        const active = this.activeRoutes[i];\r\n        if (match !== active) {\r\n          start = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.activeRoutes = matched;\r\n\r\n    // Remove the obsolete elements\r\n    if (start > 0 && this.views.length > 0) {\r\n      const el = this.views[start];\r\n      el.remove();\r\n      this.views = this.views.slice(0, start);\r\n    }\r\n\r\n    // Create the new elements\r\n    const components = await load;\r\n    const elements = components.slice(start)\r\n      .map(Component => new Component());\r\n\r\n    // Combine the newly created elements in order\r\n    // while being careful not to render them yet\r\n    for (let k = 0; k < elements.length - 1; k++) {\r\n      const parent = elements[k];\r\n      const child = elements[k + 1];\r\n      parent.append(child);\r\n    }\r\n\r\n    this.views = this.views.concat(elements);\r\n\r\n    // In correct order, resolve any new properties\r\n    // Note: this happens before the new elements are connected\r\n    for (let k = 0; k < this.views.length; k++) {\r\n      const view = this.views[k];\r\n      const route = matched[k];\r\n      const Component = components[k];\r\n\r\n      const active = new ActiveRoute(route, url);\r\n\r\n      const parameters = active.parameters;\r\n      const options = Component.properties;\r\n      if (options != null) {\r\n        // Resolve parameters from paths\r\n        for (const [key, value] of parameters) {\r\n          if (options.hasOwnProperty(key)) {\r\n            view[key] = value;\r\n          }\r\n        }\r\n\r\n        // Resolve additional properties from route\r\n        for (const key in route.properties) {\r\n          if (options.hasOwnProperty(key)) {\r\n            const value = route.properties[key];\r\n            view[key] = value;\r\n          }\r\n        }\r\n      }\r\n\r\n      view.route = active;\r\n\r\n      if (route.slot) {\r\n        view.setAttribute('slot', route.slot);\r\n      }\r\n    }\r\n\r\n    if (start > 0) {\r\n      // Connect the new elements to the deepest reused element,\r\n      // implicitly rendering them\r\n      this.views[start - 1].append(elements[0]);\r\n    } else {\r\n      // Remove anything currently rendered\r\n      const root = this.target;\r\n      while (root.firstChild) {\r\n        root.removeChild(root.firstChild);\r\n      }\r\n      // Add the root element to the target\r\n      this.target.append(this.views[0]);\r\n    }\r\n\r\n    console.timeEnd('render');\r\n    this.emit();\r\n  }\r\n\r\n  emit() {\r\n    window.dispatchEvent(new Event('location-change'));\r\n  }\r\n}\r\n"],"names":["MATCH_ALL","CATCH_ALL","PARAMETER_PATTERN","MATCH_TRAILING_SLASH","WILDCARD_PATTERN","Path","[object Object]","path","exact","match","replace","keys","exec","push","endsWith","pattern","RegExp","this","test","url","ParsedExpression","current","target","values","slice","transferred","i","length","map","Map","key","indexOf","value","get","undefined","reduce","entries","Symbol","iterator","Query","object","Object","pairs","string","startsWith","substring","split","normalize","isFunction","tag","toStringTag","isNormalFunction","hasOwnProperty","isArrowFunction","isPromise","components","WeakMap","load","component","callback","customelements","has","called","then","m","set","default","Route","options","super","children","slot","meta","freeze","properties","Promise","resolve","Component","Routes","records","routes","record","define","parent","child","ActiveRoute","route","parameters","parse","matched","query","hash","location","RouterMixin","SuperClass","router","window","Router","host","getRootNode","connectedCallback","disconnectedCallback","RouterLinkElement","HTMLElement","onClick","bind","to","v","setAttribute","getAttribute","toggleAttribute","hasAttribute","active","disabled","addEventListener","onChange","removeEventListener","href","event","decodeURIComponent","pathname","EMPTY","create","views","activeRoutes","render","data","title","history","pushState","replaceState","flatten","matches","all","import","start","console","time","remove","elements","k","append","concat","view","root","firstChild","removeChild","timeEnd","emit","dispatchEvent","Event"],"mappings":"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"}