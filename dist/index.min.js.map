{"version":3,"file":"index.min.js","sources":["../src/event-emitter.ts","../src/path.ts","../src/query.ts","../src/utils.ts","../src/route.ts","../src/router.ts","../src/router-link.ts"],"sourcesContent":["export type Listener = (detail?: any) => void;\r\n\r\nexport default class EventEmitter {\r\n  map: Map<string, Set<Listener>>;\r\n\r\n  constructor() {\r\n    this.map = new Map();\r\n  }\r\n\r\n  on(type: string, listener: Listener) {\r\n    let listeners;\r\n    if (!this.map.has(type)) {\r\n      listeners = new Set();\r\n      this.map.set(type, listeners);\r\n    } else {\r\n      listeners = this.map.get(type);\r\n    }\r\n    listeners!.add(listener);\r\n  }\r\n\r\n  off(type: string, listener: Listener) {\r\n    if (!this.map.has(type)) {\r\n      return;\r\n    }\r\n\r\n    const listeners = this.map.get(type);\r\n    listeners!.delete(listener);\r\n  }\r\n\r\n  emit(type: string, detail?: any) {\r\n    if (!this.map.has(type)) {\r\n      return;\r\n    }\r\n\r\n    const listeners = this.map.get(type);\r\n    for (const listener of listeners!) {\r\n      listener(detail);\r\n    }\r\n  }\r\n}","const MATCH_ALL = '[^/]*';\r\n\r\nconst CATCH_ALL = '([^/]+)';\r\n\r\nconst PARAMETER_PATTERN = /:([^\\/]+)/;\r\n\r\n// optional trailing slash\r\n// only matches the slash if nothing follows\r\nconst MATCH_TRAILING_SLASH = '(?:[\\/]?(?=$))?';\r\n\r\n// implements '**' as a wildcard\r\nconst WILDCARD_PATTERN = /\\*\\*/g;\r\n\r\nexport class Path {\r\n  path: string;\r\n  exact: boolean;\r\n  pattern: RegExp;\r\n  keys: string[];\r\n\r\n  constructor(path: string = '', exact: boolean = false) {\r\n    this.path = path;\r\n    this.exact = exact;\r\n    // replace any wildcards with\r\n    // their corresponding expression\r\n    let temporary = path.replace(WILDCARD_PATTERN, MATCH_ALL);\r\n\r\n    let match: RegExpExecArray | null;\r\n    let keys: string[] = [];\r\n    // convert :param to a catch-all group\r\n    // and save the keys\r\n    while ((match = PARAMETER_PATTERN.exec(temporary)) != null) {\r\n      // match[0] is the entire declaration, e. g. ':param'\r\n      temporary = temporary.replace(match[0], CATCH_ALL);\r\n      // match[1] is the name of the parameter, e. g. 'param'\r\n      keys.push(match[1]);\r\n    }\r\n\r\n    if (!temporary.endsWith('/')) {\r\n      temporary += MATCH_TRAILING_SLASH;\r\n    }\r\n\r\n    temporary = exact ? `^${temporary}$` : `^${temporary}`;\r\n    const pattern = new RegExp(temporary, 'i');\r\n\r\n    this.keys = keys;\r\n    this.pattern = pattern;\r\n  }\r\n\r\n  /**\r\n   * Convenience function that mirrors RegExp.test\r\n   */\r\n  matches(path: string): boolean {\r\n    return this.pattern.test(path);\r\n  }\r\n\r\n  /**\r\n   * Find the matched part of the given path.\r\n   */\r\n  matched(path: string): string {\r\n    let matched = this.pattern.exec(path);\r\n    return matched && matched[0] || '';\r\n  }\r\n\r\n  /**\r\n   * Parse a path string for parameter values.\r\n   */\r\n  parse(path: string): Parameters {\r\n    return new Parameters(\r\n      path,\r\n      this.pattern,\r\n      this.keys\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Transfer matched parameters in the given url to\r\n   * the target path, filling in named parameters in if they exist.\r\n   */\r\n  transfer(from: string, to: string): string {\r\n    const values = (this.pattern.exec(from) || []).slice(1);\r\n    let transferred = to;\r\n    let i = values.length;\r\n    while (i--) {\r\n      transferred = transferred\r\n        .replace(':' + this.keys[i], values[i]);\r\n    }\r\n\r\n    return transferred;\r\n  }\r\n}\r\n\r\nexport default Path;\r\n\r\nexport class Parameters {\r\n  path: string;\r\n  keys: string[];\r\n  values: string[];\r\n\r\n  constructor(path: string, pattern: RegExp, keys: string[]) {\r\n    this.path = path;\r\n    this.keys = keys;\r\n    this.values = (pattern.exec(path) || []).slice(1);\r\n  }\r\n\r\n  get(key: string): string {\r\n    return this.values[this.keys.indexOf(key)];\r\n  }\r\n\r\n  set(key: string, value: string): string {\r\n    return this.path.replace(this.get(key), value);\r\n  }\r\n\r\n  has(key: string): boolean {\r\n    return this.get(key) !== undefined;\r\n  }\r\n\r\n  entries(): Tuple<string>[] {\r\n    let entries: Tuple<string>[] = [];\r\n    for (let i = 0; i < this.keys.length; i++) {\r\n      entries.push([this.keys[i], this.values[i]]);\r\n    }\r\n    return entries;\r\n  }\r\n\r\n  all(): Dictionary {\r\n    return this.keys.reduce((object: Dictionary, key: string, i) => {\r\n      object[key] = this.values[i];\r\n      return object;\r\n    }, {});\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n    const length = this.keys.length;\r\n    for (let i = 0; i < length; i++) {\r\n      yield [this.keys[i], this.values[i]];\r\n    }\r\n  }\r\n}\r\n","export class Query extends Map<string, string> {\r\n  static from(object: Dictionary): Query {\r\n    return new Query(Object.entries(object));\r\n  }\r\n\r\n  static parse(string: string): Query {\r\n    if (string.startsWith('?')) {\r\n      string = string.substring(1);\r\n    }\r\n\r\n    let entries: Tuple<string>[] = [];\r\n    if (string !== '') {\r\n      entries = string.split('&')\r\n        .map((substring) => (substring.split('=') as Tuple<string>));\r\n    }\r\n\r\n    return new Query(entries);\r\n  }\r\n\r\n  toString(): string {\r\n    let string = '';\r\n    for (const [key, value] of this) {\r\n      string += `&${key}=${value}`;\r\n    }\r\n    return string.substring(1);\r\n  }\r\n}\r\n\r\nexport default Query;\r\n","/**\r\n * Append a leading slash, and remove all excess slashes.\r\n */\r\nexport function normalize(path: string): string {\r\n  return ('/' + path).replace(/[\\/]+/g, '/');\r\n}\r\n\r\n/**\r\n * Determines if the given object is a callable function.\r\n * An ES2015 class will return false, while ordinary functions,\r\n * arrow functions, generator functions and async functions return true.\r\n * @param object the object that is to be inspected\r\n * @returns `true` if the given object is a callable function\r\n */\r\nexport function isFunction(object: any): boolean {\r\n  if (!(typeof object === 'function')) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Values for `hasOwnProperty` on functions:\r\n   * \r\n   *           | Class | Ordinary | Arrow | Async | Generator |\r\n   * ---------------------------------------------------------|\r\n   * arguments | false |   true   | false | false |   false   |\r\n   * prototype | true  |   true   | false | false |   true    |\r\n   * \r\n   */\r\n\r\n  const tag = object[Symbol.toStringTag];\r\n  if (tag === 'AsyncFunction' || tag === 'GeneratorFunction') {\r\n    return true;\r\n  } else {\r\n    // Ordinary functions have an `arguments` property, which classes do not.\r\n    const isNormalFunction = object.hasOwnProperty('arguments');\r\n    // Arrow functions do not have a `prototype` property, which classes do.\r\n    const isArrowFunction = !object.hasOwnProperty('prototype');\r\n    return isNormalFunction || isArrowFunction;\r\n  }\r\n}\r\n\r\nexport function isPromise(object: any): boolean {\r\n  return object[Symbol.toStringTag] === 'Promise';\r\n}\r\n\r\nexport function clone<T>(object: T): T {\r\n  return Object.assign({}, object);\r\n}\r\n\r\nexport function freeze<T>(object: T): T {\r\n  return Object.freeze(object);\r\n}\r\n\r\nexport function empty() {\r\n  return Object.create(null);\r\n}\r\n\r\nexport function always(): true {\r\n  return true;\r\n}\r\n\r\nexport function never(): false {\r\n  return false;\r\n}\r\n\r\nexport const EMPTY = freeze(Object.create(null));\r\n","import Path, { Parameters } from './path';\r\nimport Query from './query';\r\nimport {\r\n  normalize,\r\n  clone,\r\n  freeze,\r\n  always,\r\n  empty,\r\n  isFunction\r\n} from './utils';\r\n\r\nexport interface Module {\r\n  default: HTMLElement;\r\n}\r\n\r\nexport type Component = AsyncComponent | HTMLElement | string;\r\nexport type AsyncComponent = () => Promise<HTMLElement | Module>;\r\nexport type Guard = () => boolean;\r\nexport type Properties = (snapshot: Snapshot) => Dictionary;\r\n\r\nexport interface Record {\r\n  path: string;\r\n  component: Component;\r\n  exact?: boolean;\r\n  redirect?: string;\r\n  slot?: string;\r\n  guard?: Guard;\r\n  properties?: Properties;\r\n  children?: Record[];\r\n}\r\n\r\nexport interface Snapshot {\r\n  readonly parameters: Parameters;\r\n  readonly query: Query;\r\n  readonly matched: string;\r\n  readonly hash: string;\r\n}\r\n\r\nexport class Route extends Path {\r\n  static cache = new Map();\r\n  path: string;\r\n  exact: boolean;\r\n  component: Component;\r\n  children: Route[];\r\n  redirect?: string;\r\n  slot?: string;\r\n  guard: Guard;\r\n  properties: Properties;\r\n\r\n  static async import(identifier: Component): Promise<HTMLElement> {\r\n    if (typeof identifier === 'string') {\r\n      // If it's a string, assume that it has\r\n      // been defined, and return the constructor\r\n      // from the element registry\r\n      return customElements.get(identifier);\r\n  \r\n    } else if (isFunction(identifier)) {\r\n      // If it's a function, call it\r\n      let called = (identifier as AsyncComponent)();\r\n      // If it's a promise, resolve it\r\n      let resolved = await Promise.resolve(called);\r\n\r\n      // If the promise resolved directly to an element,\r\n      // return it\r\n      // otherwise, assume that it resolved to a module\r\n      // with the default export being the element\r\n      if ((resolved as Module).default) {\r\n        return (resolved as Module).default;\r\n      } else {\r\n        return resolved as HTMLElement;\r\n      }\r\n    } else {\r\n      // If it's not a string or a promise,\r\n      // it's just\r\n      return identifier as HTMLElement;\r\n    }\r\n  }\r\n\r\n  constructor(record: Record) {\r\n    let {\r\n      path,\r\n      component,\r\n      exact,\r\n      redirect,\r\n      slot,\r\n      guard,\r\n      properties,\r\n      children\r\n    } = record;\r\n\r\n    // Path should be exact if the route\r\n    // does not have any children,\r\n    // but only if the record does not\r\n    // declare anything\r\n    if (exact == null) {\r\n      exact = (\r\n        children == null ||\r\n        children.length === 0\r\n      );\r\n    }\r\n\r\n    super(path, exact);\r\n    this.path = path;\r\n    this.exact = exact;\r\n    this.redirect = redirect;\r\n    this.component = component;\r\n    this.slot = slot;\r\n    this.guard = guard || always;\r\n    this.properties = freeze(properties || empty);\r\n    this.children = (children || []).map(child =>\r\n      createChildRoute(clone(child), this)\r\n    );\r\n  }\r\n\r\n  async import(): Promise<HTMLElement> {\r\n    if (Route.cache.has(this.component)) {\r\n      return Route.cache.get(this.component);\r\n    } else {\r\n      let ctor = await Route.import(this.component);\r\n      Route.cache.set(this.component, ctor);\r\n      return ctor;\r\n    }\r\n  }\r\n\r\n  snapshot(path: string): Snapshot {\r\n    return freeze({\r\n      parameters: this.parse(path),\r\n      query: Query.parse(location.search),\r\n      matched: this.matched(path),\r\n      hash: location.hash.substring(1)\r\n    });\r\n  }\r\n}\r\n\r\nfunction createChildRoute(record: Record, parent: Route): Route {\r\n  if (record.path === '') {\r\n    // If the path is empty, simply copy the parent path\r\n    record.path = parent.path;\r\n  } else {\r\n    // Otherwise, prepend the parent path\r\n    record.path = normalize(parent.path + '/' + record.path);\r\n  }\r\n\r\n  // Same idea with redirect\r\n  if (record.redirect != null) {\r\n    if (record.redirect === '') {\r\n      record.redirect = parent.path;\r\n    } else {\r\n      record.redirect = normalize(parent.path + '/' + record.redirect);\r\n    }\r\n  }\r\n\r\n  return new Route(record);\r\n}\r\n\r\nexport default Route;","import EventEmitter from './event-emitter';\r\nimport Route, { Record } from './route';\r\nimport { EMPTY } from './utils';\r\n\r\nexport interface SearchResult {\r\n  matched: Route[];\r\n  path: string;\r\n}\r\n\r\nexport interface NavigationOptions {\r\n  data: any;\r\n  title: string;\r\n}\r\n\r\nexport class Router extends EventEmitter {\r\n  static instance: Router;\r\n  elements: HTMLElement[];\r\n  matched: Route[];\r\n  routes: Route[];\r\n  middleware: Function[];\r\n  isConnected: boolean;\r\n  target?: HTMLElement;\r\n\r\n  constructor(records: Record[]) {\r\n    super();\r\n    this.isConnected = false;\r\n    this.elements = [];\r\n    this.matched = [];\r\n    this.middleware = [];\r\n    this.routes = records.map(record => new Route(record));\r\n    this.onPopstate = this.onPopstate.bind(this);\r\n    Router.instance = this;\r\n  }\r\n\r\n  async connect(target: HTMLElement) {\r\n    this.isConnected = true;\r\n    this.target = target;\r\n    window.addEventListener('popstate', this.onPopstate);\r\n    const currentPath = decodeURIComponent(location.pathname);\r\n    const { matched, path } = this.match(currentPath);\r\n\r\n    history.replaceState(history.state, document.title, path);\r\n    await this.render(matched);\r\n    this.emit('connect');\r\n  }\r\n\r\n  disconnect() {\r\n    this.isConnected = false;\r\n    window.removeEventListener('popstate', this.onPopstate);\r\n    this.teardown();\r\n    this.matched = [];\r\n    this.target = undefined;\r\n    this.emit('disconnect');\r\n  }\r\n\r\n  onPopstate() {\r\n    const to = decodeURIComponent(location.pathname);\r\n    const { matched, path } = this.match(to);\r\n    if (to !== path) {\r\n      history.replaceState(history.state, document.title, path);\r\n    }\r\n    this.emit('pop');\r\n    this.render(matched);\r\n  }\r\n\r\n  push(to: string, options: NavigationOptions = EMPTY) {\r\n    to = decodeURIComponent(to);\r\n    const { matched, path } = this.match(to);\r\n    const { data, title } = options;\r\n    history.pushState(data, title, path);\r\n    this.emit('push');\r\n    return this.render(matched);\r\n  }\r\n\r\n  replace(to: string, options: NavigationOptions = EMPTY) {\r\n    to = decodeURIComponent(to);\r\n    const { matched, path } = this.match(to);\r\n    const { data, title } = options;\r\n    history.replaceState(data, title, path);\r\n    this.emit('replace');\r\n    return this.render(matched);\r\n  }\r\n\r\n  pop(entries: number = -1) {\r\n    // triggers onPopstate(), so no need to render\r\n    // in this method call\r\n    history.go(entries);\r\n  }\r\n\r\n  search(path: string, routes: Route[], matched: Route[]): SearchResult {\r\n    const route = routes\r\n      .find(r => r.matches(path) && r.guard());\r\n\r\n    if (route) {\r\n      matched.push(route);\r\n      if (route.redirect) {\r\n        // transfer any matched parameters\r\n        const from = route.matched(path);\r\n        const to = route.redirect;\r\n        const redirected = route.transfer(from, to);\r\n        // and start over\r\n        return this.search(redirected, this.routes, []);\r\n      } else if (route.children) {\r\n        // Search through the children\r\n        return this.search(path, route.children, matched);\r\n      } else {\r\n        return { matched, path };\r\n      }\r\n    } else {\r\n      // End the search here\r\n      return { matched, path };\r\n    }\r\n  }\r\n\r\n  match(path: string): SearchResult {\r\n    return this.search(path, this.routes, []);\r\n  }\r\n\r\n  async render(matched: Route[]) {\r\n    if (this.target == undefined) {\r\n      return;\r\n    }\r\n\r\n    // Importing early in case both network\r\n    // and device is slow, but not awaiting\r\n    // it just yet.\r\n    const load = Promise.all(\r\n      matched.map(route => route.import())\r\n    );\r\n\r\n    // Find the index at which the matched routes\r\n    // differ from the active routes.\r\n    let start;\r\n    for (let i = 0; i < matched.length; i++) {\r\n      const match = matched[i];\r\n      if (this.matched.length < i + 1) {\r\n        start = i;\r\n        break;\r\n      } else {\r\n        const active = this.matched[i];\r\n        if (match !== active) {\r\n          start = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (start == null) {\r\n      start = matched.length;\r\n    }\r\n\r\n    this.matched = matched;\r\n\r\n    // Remove the obsolete elements\r\n    const removals = this.elements.slice(start);\r\n    while (removals.length > 0) {\r\n      const element = removals.pop();\r\n      element!.remove();\r\n    }\r\n\r\n    this.elements = this.elements.slice(0, start);\r\n\r\n    const components = await load;\r\n    // Create the new elements\r\n    const additions = components.slice(start)\r\n      // TODO: fix type\r\n      .map((Component: any) => new Component());\r\n\r\n    // Combine the newly created elements in order\r\n    // while being careful not to render them yet\r\n    for (let i = 0; i < additions.length - 1; i++) {\r\n      const parent = additions[i];\r\n      const child = additions[i + 1];\r\n      parent.appendChild(child);\r\n    }\r\n\r\n    this.elements = this.elements.concat(additions);\r\n\r\n    // In correct order, resolve any new properties\r\n    // Note: this happens before the new elements are connected\r\n    const url = decodeURIComponent(location.pathname);\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      // TODO: fix type\r\n      const element: any = this.elements[i];\r\n      const route = matched[i];\r\n      // TODO: fix type\r\n      const Component: any = components[i];\r\n      const options = Component.properties;\r\n      if (options != undefined) {\r\n        const snapshot = route.snapshot(url);\r\n        const parameters = snapshot.parameters;\r\n        // Resolve parameters from paths\r\n        for (const [key, value] of parameters) {\r\n          if (options.hasOwnProperty(key)) {\r\n            element[key] = value;\r\n          }\r\n        }\r\n\r\n        // Resolve additional properties from route\r\n        const properties = route.properties(snapshot);\r\n        for (const key in properties) {\r\n          if (options.hasOwnProperty(key)) {\r\n            const value = properties[key];\r\n            element[key] = value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (route.slot) {\r\n        element.setAttribute('slot', route.slot);\r\n      }\r\n    }\r\n\r\n    // If there are any additions, they need to be rendered\r\n    if (additions.length > 0) {\r\n      if (start > 0) {\r\n        // Some reuse\r\n        // Connect the new elements to the deepest reused element,\r\n        // implicitly rendering them\r\n        this.elements[start - 1].appendChild(additions[0]);\r\n      } else {\r\n        // No reuse\r\n        this.target.appendChild(this.elements[0]);\r\n      }\r\n    }\r\n\r\n    this.emit('render');\r\n  }\r\n\r\n  teardown() {\r\n    while (this.elements.length > 0) {\r\n      const element = this.elements.pop();\r\n      element!.remove();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import Router from './router';\r\n\r\nexport interface Installable {\r\n  tagName: string;\r\n  install(): void;\r\n}\r\n\r\nexport function InstallMixin<T extends Constructor<HTMLElement>>(Base: T): T & Installable {\r\n  return class extends Base {\r\n    static tagName: string;\r\n    static install() {\r\n      customElements.define(this.tagName, this);\r\n    }\r\n  }\r\n}\r\n\r\nexport class RouterLink extends InstallMixin(HTMLElement) {\r\n  static observedAttributes = ['disabled'];\r\n  static tagName = 'router-link';\r\n  router: Router;\r\n  to?: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.router = Router.instance;\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  set exact(v: boolean) {\r\n    this.toggleAttribute('exact', v);\r\n  }\r\n\r\n  get exact(): boolean {\r\n    return this.hasAttribute('exact');\r\n  }\r\n\r\n  set active(v: boolean) {\r\n    this.toggleAttribute('active', v);\r\n  }\r\n\r\n  get active(): boolean {\r\n    return this.hasAttribute('active');\r\n  }\r\n\r\n  set disabled(v: boolean) {\r\n    this.toggleAttribute('disabled', v);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  attributesChangedCallback(attr: string, oldValue: string, newValue: string) {\r\n    if (attr === 'disabled') {\r\n      const hasValue = newValue != null;\r\n      if (hasValue) {\r\n        this.active = false;\r\n        this.router.off('render', this.onChange);\r\n      } else {\r\n        this.router.on('render', this.onChange);\r\n        this.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    let link = this.querySelector('a');\r\n    if (link != null) {\r\n      this.to = link.pathname;\r\n    } else if (this.to != null) {\r\n      this.setAttribute('to', this.to);\r\n    } else {\r\n      this.to = this.getAttribute('to') || '';\r\n    }\r\n\r\n    this.addEventListener('click', this.onClick);\r\n    this.router.on('render', this.onChange);\r\n    this.onChange();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.removeEventListener('click', this.onClick);\r\n    this.router.off('render', this.onChange);\r\n  }\r\n\r\n  toggleAttribute(name: string, predicate: boolean) {\r\n    if (predicate) {\r\n      this.setAttribute(name, '');\r\n    } else {\r\n      this.removeAttribute(name);\r\n    }\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    // Ignore clicks with modifiers\r\n    if (\r\n      event.metaKey ||\r\n      event.altKey ||\r\n      event.ctrlKey ||\r\n      event.shiftKey\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Ignore prevented clicks\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // Ignore right mouse button clicks\r\n    if (\r\n      event.button !== undefined &&\r\n      event.button !== 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    if (this.disabled || !this.to) {\r\n      return;\r\n    } else {\r\n      this.router.push(this.to);\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    if (!this.to) {\r\n      this.active = false;\r\n      return;\r\n    }\r\n\r\n    const url = decodeURIComponent(location.pathname);\r\n    if (this.to.startsWith('/')) {\r\n      this.active = this.exact\r\n        ? url === this.to\r\n        : url.startsWith(this.to);\r\n    } else {\r\n      this.active = url.endsWith(this.to);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RouterLink;\r\n"],"names":["[object Object]","this","map","Map","type","listener","listeners","has","get","Set","set","add","delete","detail","MATCH_ALL","CATCH_ALL","PARAMETER_PATTERN","MATCH_TRAILING_SLASH","WILDCARD_PATTERN","path","exact","match","temporary","replace","keys","exec","push","endsWith","pattern","RegExp","test","matched","Parameters","from","to","values","slice","transferred","i","length","key","indexOf","value","undefined","entries","reduce","object","Symbol","iterator","Query","Object","string","startsWith","substring","split","tag","toStringTag","isNormalFunction","hasOwnProperty","isArrowFunction","assign","freeze","create","EMPTY","Path","record","component","redirect","slot","guard","properties","children","super","always","empty","child","createChildRoute","clone","identifier","customElements","isFunction","called","resolved","Promise","resolve","default","Route","cache","ctor","import","parameters","parse","query","location","search","hash","parent","normalize","EventEmitter","records","isConnected","elements","middleware","routes","onPopstate","bind","Router","instance","target","window","addEventListener","currentPath","decodeURIComponent","pathname","history","replaceState","state","document","title","render","emit","removeEventListener","teardown","options","data","pushState","go","route","find","r","matches","redirected","transfer","load","all","start","removals","pop","remove","components","additions","Component","appendChild","concat","url","element","snapshot","setAttribute","Base","define","tagName","InstallMixin","HTMLElement","router","onClick","onChange","v","toggleAttribute","hasAttribute","active","disabled","attr","oldValue","newValue","off","on","link","querySelector","getAttribute","name","predicate","removeAttribute","event","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","RouterLink"],"mappings":"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"}