{"version":3,"file":"index.min.js","sources":["../src/event-emitter.ts","../src/utils.ts","../src/path.ts","../src/query.ts","../src/route.ts","../src/history.ts","../src/router.ts","../src/router-link.ts"],"sourcesContent":["export type Listener = (detail?: any) => void;\r\n\r\nexport default class EventEmitter {\r\n  map: Map<string, Set<Listener>>;\r\n\r\n  constructor() {\r\n    this.map = new Map();\r\n  }\r\n\r\n  on(type: string, listener: Listener) {\r\n    let listeners;\r\n    if (!this.map.has(type)) {\r\n      listeners = new Set();\r\n      this.map.set(type, listeners);\r\n    } else {\r\n      listeners = this.map.get(type);\r\n    }\r\n    listeners!.add(listener);\r\n  }\r\n\r\n  off(type: string, listener: Listener) {\r\n    if (!this.map.has(type)) {\r\n      return;\r\n    }\r\n\r\n    const listeners = this.map.get(type);\r\n    listeners!.delete(listener);\r\n  }\r\n\r\n  emit(type: string, detail?: any) {\r\n    if (!this.map.has(type)) {\r\n      return;\r\n    }\r\n\r\n    const listeners = this.map.get(type);\r\n    for (const listener of listeners!) {\r\n      listener(detail);\r\n    }\r\n  }\r\n}","/**\r\n * Append a leading slash, and remove all excess slashes.\r\n */\r\nexport function normalize(path: string): string {\r\n  return ('/' + path).replace(/[\\/]+/g, '/');\r\n}\r\n\r\n/**\r\n * Shorthand for `decodeURIComponent`\r\n */\r\nexport function decode(str: string): string {\r\n  return decodeURIComponent(str);\r\n}\r\n\r\ntype URI = { pathname: string, search: string, hash: string };\r\n\r\n/**\r\n * Split the pathname, search (query) and hash of a path.\r\n */\r\nexport function split(path: string): URI {\r\n  let temp = path.split('#');\r\n  const hash = temp[1] || '';\r\n  temp = (temp[0] || '').split('?');\r\n  const search = temp[1] || '';\r\n  const pathname = temp[0] || '';\r\n  return {\r\n    pathname,\r\n    search,\r\n    hash\r\n  };\r\n}\r\n\r\n/**\r\n * Extract the pathname of a path (i. e. excluding the search and hash).\r\n */\r\nexport function pathname(path: string): string {\r\n  return (path.split('#')[0] || '').split('?')[0];\r\n}\r\n\r\n/**\r\n * Extract the search (query) of a path.\r\n */\r\nexport function search(path: string): string {\r\n  path = (path.split('#')[0] || '');\r\n  if (/\\?/.test(path)) {\r\n    return path.split('?')[1] || '';\r\n  } else {\r\n    return path;\r\n  }\r\n}\r\n\r\n/**\r\n * Extract the hash of a path.\r\n */\r\nexport function hash(path: string): string {\r\n  return path.split('#')[1] || '';\r\n}\r\n\r\n/**\r\n * Determines if the given object is a callable function.\r\n * An ES2015 class will return false, while ordinary functions,\r\n * arrow functions, generator functions and async functions return true.\r\n */\r\nexport function isFunction(object: any): boolean {\r\n  if (!(typeof object === 'function')) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Values for `hasOwnProperty` on functions:\r\n   * \r\n   *           | Class | Ordinary | Arrow | Async | Generator |\r\n   * ---------------------------------------------------------|\r\n   * arguments | false |   true   | false | false |   false   |\r\n   * prototype | true  |   true   | false | false |   true    |\r\n   * \r\n   */\r\n\r\n  const tag = object[Symbol.toStringTag];\r\n  if (tag === 'AsyncFunction' || tag === 'GeneratorFunction') {\r\n    return true;\r\n  } else {\r\n    // Ordinary functions have an `arguments` property, which classes do not.\r\n    const isNormalFunction = object.hasOwnProperty('arguments');\r\n    // Arrow functions do not have a `prototype` property, which classes do.\r\n    const isArrowFunction = !object.hasOwnProperty('prototype');\r\n    return isNormalFunction || isArrowFunction;\r\n  }\r\n}\r\n\r\n/**\r\n * Determine if the given object is a promise.\r\n */\r\nexport function isPromise(object: any): boolean {\r\n  return object[Symbol.toStringTag] === 'Promise';\r\n}\r\n\r\n/**\r\n * Determine if the given object is an ES module (the return value of `import()`)\r\n * or a shim (like `require()`)\r\n */\r\nexport function isModule(object: any): boolean {\r\n  return object[Symbol.toStringTag] === 'Module' || object.__esModule;\r\n}\r\n\r\n/**\r\n * Shorthand for `Object.assign`.\r\n */\r\nexport function clone<T>(object: T): T {\r\n  return Object.assign(empty(), object);\r\n}\r\n\r\n/**\r\n * Shorthand for `Object.freeze`.\r\n */\r\nexport function freeze<T>(object: T): T {\r\n  return Object.freeze(object);\r\n}\r\n\r\n/**\r\n * Shorthand for `Object.create(null)`.\r\n */\r\nexport function empty() {\r\n  return Object.create(null);\r\n}\r\n\r\n/**\r\n * Always returns `true`.\r\n */\r\nexport function always(): true {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Always returns `false`.\r\n */\r\nexport function never(): false {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Combine two arrays to an array of tuples.\r\n */\r\nexport function zip(a: any[], b: any[]): any[2][] {\r\n  return a.map((v, i) => [v, b[i]]);\r\n}\r\n\r\n/**\r\n * Convert an array of tuples to an object in which each key\r\n * is the first element of the tuple and the value is the second element of the tuple.\r\n */\r\nexport function dictionary(pairs: [any, any][]): Dictionary<string> {\r\n  let index = -1;\r\n  const length = pairs.length;\r\n  const result: Dictionary<string> = {};\r\n\r\n  while (++index < length) {\r\n    const pair = pairs[index];\r\n    result[pair[0]] = pair[1];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * A frozen object with no prototype chain.\r\n */\r\nexport const EMPTY = freeze(Object.create(null));\r\n","import { pathname, zip, dictionary } from './utils';\r\n\r\nconst MATCH_ALL = '[^/]*';\r\n\r\nconst CATCH_ALL = '([^/]+)';\r\n\r\nconst PARAMETER_PATTERN = /:([^\\/]+)/;\r\n\r\n// optional trailing slash\r\n// only matches the slash if nothing follows\r\nconst MATCH_TRAILING_SLASH = '(?:[\\/]?(?=$))?';\r\n\r\n// implements '**' as a wildcard\r\nconst WILDCARD_PATTERN = /\\*\\*/g;\r\n\r\nexport class Path {\r\n  path: string;\r\n  exact: boolean;\r\n  pattern: RegExp;\r\n  keys: string[];\r\n\r\n  constructor(path: string = '', exact: boolean = false) {\r\n    path = pathname(path);\r\n    this.path = path;\r\n    this.exact = exact;\r\n    // replace any wildcards with\r\n    // their corresponding expression\r\n    let temporary = path.replace(WILDCARD_PATTERN, MATCH_ALL);\r\n\r\n    let match: RegExpExecArray | null;\r\n    let keys: string[] = [];\r\n    // convert :param to a catch-all group\r\n    // and save the keys\r\n    while ((match = PARAMETER_PATTERN.exec(temporary)) != null) {\r\n      // match[0] is the entire declaration, e. g. ':param'\r\n      temporary = temporary.replace(match[0], CATCH_ALL);\r\n      // match[1] is the name of the parameter, e. g. 'param'\r\n      keys.push(match[1]);\r\n    }\r\n\r\n    if (!temporary.endsWith('/')) {\r\n      temporary += MATCH_TRAILING_SLASH;\r\n    }\r\n\r\n    temporary = exact ? `^${temporary}$` : `^${temporary}`;\r\n    const pattern = new RegExp(temporary, 'i');\r\n\r\n    this.keys = keys;\r\n    this.pattern = pattern;\r\n  }\r\n\r\n  /**\r\n   * Convenience function that mirrors RegExp.test\r\n   */\r\n  matches(path: string): boolean {\r\n    return this.pattern.test(pathname(path));\r\n  }\r\n\r\n  /**\r\n   * Find the matched part of the given path.\r\n   */\r\n  matched(path: string): string {\r\n    let matched = this.pattern.exec(pathname(path));\r\n    return matched && matched[0] || '';\r\n  }\r\n\r\n  /**\r\n   * Parse a path string for parameter values.\r\n   */\r\n  parse(path: string): Parameters {\r\n    return new Parameters(\r\n      path,\r\n      this.pattern,\r\n      this.keys\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Transfer matched parameters in the given url to\r\n   * the target path, filling in named parameters in if they exist.\r\n   */\r\n  transfer(from: string, to: string): string {\r\n    const values = (this.pattern.exec(from) || []).slice(1);\r\n    let transferred = to;\r\n    let i = values.length;\r\n    while (i--) {\r\n      transferred = transferred\r\n        .replace(':' + this.keys[i], values[i]);\r\n    }\r\n\r\n    return transferred;\r\n  }\r\n}\r\n\r\nexport default Path;\r\n\r\nexport class Parameters extends Map<string, string> {\r\n  path: string;\r\n\r\n  constructor(path: string, pattern: RegExp, keys: string[]) {\r\n    path = pathname(path);\r\n    const values = (pattern.exec(path) || []).slice(1);\r\n    super(zip(keys, values));\r\n    this.path = path;\r\n  }\r\n\r\n  all(): Dictionary<string> {\r\n    return dictionary(Array.from(this.entries()));\r\n  }\r\n}\r\n","import { search, dictionary } from './utils';\r\n\r\nexport class Query extends Map<string, string> {\r\n  static from(object: Dictionary<string>): Query {\r\n    return new Query(Object.entries(object));\r\n  }\r\n\r\n  static parse(string: string): Query {\r\n    const queryString = search(string);\r\n\r\n    let entries: Tuple<string>[] = [];\r\n    if (queryString !== '') {\r\n      entries = queryString.split('&')\r\n        .map((substring) => (substring.split('=') as Tuple<string>));\r\n    }\r\n\r\n    return new Query(entries);\r\n  }\r\n\r\n  all(): Dictionary<string> {\r\n    return dictionary(Array.from(this.entries()));\r\n  }\r\n\r\n  toString(): string {\r\n    let string = '';\r\n    for (const [key, value] of this) {\r\n      string += `&${key}=${value}`;\r\n    }\r\n    return string.substring(1);\r\n  }\r\n}\r\n\r\nexport default Query;\r\n","import Path, { Parameters } from './path';\r\nimport Query from './query';\r\nimport {\r\n  normalize,\r\n  decode,\r\n  split,\r\n  always,\r\n  empty,\r\n  isFunction,\r\n  isModule\r\n} from './utils';\r\n\r\ninterface Module {\r\n  default: HTMLElement;\r\n}\r\n\r\ntype Component = AsyncComponent | HTMLElement;\r\ntype AsyncComponent = () => Promise<HTMLElement | Module>;\r\ntype Guard = () => boolean;\r\ntype Properties = (snapshot: Snapshot) => Dictionary<any>;\r\n\r\nexport interface Record {\r\n  path: string;\r\n  component?: Component | string;\r\n  exact?: boolean;\r\n  redirect?: string;\r\n  slot?: string;\r\n  guard?: Guard;\r\n  properties?: Properties;\r\n  children?: Record[];\r\n}\r\n\r\ninterface Snapshot {\r\n  parameters: Parameters;\r\n  query: Query;\r\n  hash: string;\r\n  matched: string;\r\n}\r\n\r\nexport class Route extends Path {\r\n  private static cache = new WeakMap();\r\n  path: string;\r\n  exact: boolean;\r\n  component: Component;\r\n  redirect?: string;\r\n  slot?: string;\r\n  guard: Guard;\r\n  properties: Properties;\r\n  children: Route[];\r\n\r\n  static async import(identifier: Component): Promise<HTMLElement> {\r\n    if (isFunction(identifier)) {\r\n      // If it's a function, call it\r\n      let called = (identifier as AsyncComponent)();\r\n      // If it's a promise, resolve it\r\n      let resolved = await Promise.resolve(called);\r\n      // If the promise resolved to a module, assume\r\n      // the constructor is the default export\r\n      // Otherwise, assume the promise resolved\r\n      // to a constructor\r\n      if (isModule(resolved)) {\r\n        return (resolved as Module).default;\r\n      } else {\r\n        return resolved as HTMLElement;\r\n      }\r\n    } else {\r\n      // If it's not a function,\r\n      // assume it's a constructor\r\n      return identifier as HTMLElement;\r\n    }\r\n  }\r\n\r\n  constructor(record: Record) {\r\n    let {\r\n      path,\r\n      component,\r\n      exact,\r\n      redirect,\r\n      slot,\r\n      guard,\r\n      properties,\r\n      children\r\n    } = record;\r\n\r\n    // Path should be exact if the route\r\n    // does not have any children,\r\n    // but only if the record does not\r\n    // specifically declare anything\r\n    if (exact == null) {\r\n      exact = (\r\n        children == null ||\r\n        children.length === 0\r\n      );\r\n    }\r\n\r\n    super(path, exact);\r\n    this.path = path;\r\n    this.exact = exact;\r\n    this.redirect = redirect;\r\n    this.component = typeof component === 'string'\r\n      ? customElements.get(component)\r\n      : component;\r\n    this.slot = slot;\r\n    this.guard = guard || always;\r\n    this.properties = properties || empty;\r\n    this.children = (children || []).map(child =>\r\n      createChildRoute(child, this)\r\n    );\r\n  }\r\n\r\n  async import(): Promise<HTMLElement> {\r\n    if (!isFunction(this.component)) {\r\n      return this.component as HTMLElement;\r\n    } else if (Route.cache.has(this.component)) {\r\n      return Route.cache.get(this.component);\r\n    } else {\r\n      const ctor = await Route.import(this.component);\r\n      Route.cache.set(this.component, ctor);\r\n      return ctor;\r\n    }\r\n  }\r\n\r\n  snapshot(location: string | Location): Snapshot {\r\n    const {\r\n      pathname,\r\n      search,\r\n      hash\r\n    } = typeof location === 'string'\r\n      ? split(location)\r\n      : location;\r\n\r\n    return {\r\n      parameters: this.parse(decode(pathname)),\r\n      query: Query.parse(decode(search)),\r\n      matched: this.matched(decode(pathname)),\r\n      hash\r\n    };\r\n  }\r\n}\r\n\r\nfunction createChildRoute(record: Record, parent: Route): Route {\r\n  if (record.path === '') {\r\n    record.path = parent.path;\r\n  } else {\r\n    record.path = normalize(parent.path + '/' + record.path);\r\n  }\r\n  if (record.redirect != null) {\r\n    record.redirect = normalize(parent.path + '/' + record.redirect);\r\n  }\r\n  return new Route(record);\r\n}\r\n\r\nexport default Route;","import { EMPTY, decode } from './utils';\r\n\r\nexport interface Options {\r\n  data: any;\r\n  title: string;\r\n}\r\n\r\ntype PopstateListener = (to: string) => void;\r\n\r\nconst h = history;\r\nconst onpop = Symbol('onpop');\r\n\r\nexport default class History {\r\n  onPopstate: PopstateListener;\r\n\r\n  constructor(listener: PopstateListener) {\r\n    this.onPopstate = listener;\r\n    this[onpop] = this[onpop].bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.addEventListener('popstate', this[onpop]);\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener('popstate', this[onpop]);\r\n  }\r\n\r\n  [onpop]() {\r\n    const to = decode(location.pathname);\r\n    this.onPopstate(to);\r\n  }\r\n\r\n  push(path: string, options: Options = EMPTY) {\r\n    const { data, title } = options;\r\n    h.pushState(data, title, path);\r\n  }\r\n\r\n  replace(path: string, options: Options = EMPTY) {\r\n    const { data, title } = options;\r\n    h.replaceState(data, title, path);\r\n  }\r\n\r\n  go(delta: number) {\r\n    h.go(delta);\r\n  }\r\n}","import EventEmitter from './event-emitter';\r\nimport Route, { Record } from './route';\r\nimport History, { Options } from './history';\r\nimport { decode, pathname } from './utils';\r\n\r\nexport interface SearchResult {\r\n  matched: Route[];\r\n  path: string;\r\n}\r\n\r\nexport class Router extends EventEmitter {\r\n  static instance: Router;\r\n  isConnected: boolean;\r\n  history: History;\r\n  routes: Route[];\r\n  elements: HTMLElement[];\r\n  matched: Route[];\r\n  root?: HTMLElement;\r\n\r\n  constructor(records: Record[]) {\r\n    super();\r\n    this.isConnected = false;\r\n    this.elements = [];\r\n    this.matched = [];\r\n    this.routes = records.map(record => new Route(record));\r\n    this.onpop = this.onpop.bind(this);\r\n    this.history = new History(this.onpop);\r\n    Router.instance = this;\r\n  }\r\n\r\n  /**\r\n   * Connect the router to an element.\r\n   * This checks the current location for matching,\r\n   * and renders those matched elements.\r\n   */\r\n  async connect(root: HTMLElement): Promise<void> {\r\n    this.isConnected = true;\r\n    this.root = root;\r\n    const to = decode(location.pathname);\r\n    const { matched, path } = this.match(to);\r\n    this.history.connect();\r\n    this.history.replace(path);\r\n    await this.render(matched);\r\n    this.emit('connect');\r\n  }\r\n\r\n  /**\r\n   * Disconnect the router from it's current root element.\r\n   * This removes all the elements currently rendered, and\r\n   * removes all listeners, effectively leaving the router inactive.\r\n   */\r\n  disconnect(): void {\r\n    this.isConnected = false;\r\n    this.matched = [];\r\n    this.root = undefined;\r\n    this.teardown();\r\n    this.history.disconnect();\r\n    this.emit('disconnect');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onpop(to: string): void {\r\n    const { matched, path } = this.match(to);\r\n    if (to !== path) {\r\n      this.history.replace(path);\r\n    }\r\n    this.emit('pop');\r\n    this.render(matched);\r\n  }\r\n\r\n  /**\r\n   * Push a history entry onto the stack.\r\n   */\r\n  push(to: string, options?: Options): Promise<void> {\r\n    to = decode(to);\r\n    const { matched, path } = this.match(to);\r\n    this.history.push(path, options);\r\n    this.emit('push');\r\n    return this.render(matched);\r\n  }\r\n\r\n  /**\r\n   * Replace the topmost entry in the history stack.\r\n   */\r\n  replace(to: string, options?: Options): Promise<void> {\r\n    to = decode(to);\r\n    const { matched, path } = this.match(to);\r\n    this.history.replace(path, options);\r\n    this.emit('replace');\r\n    return this.render(matched);\r\n  }\r\n\r\n  /**\r\n   * Traverse through the history stack.\r\n   */\r\n  go(entries: number) {\r\n    // triggers onpop(), so no need to render\r\n    // in this method call\r\n    this.history.go(entries);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  search(path: string, routes: Route[], matched: Route[]): SearchResult {\r\n    const route = routes.find(r => r.matches(path) && r.guard());\r\n\r\n    if (route) {\r\n      matched.push(route);\r\n      if (route.redirect) {\r\n        // transfer any matched parameters\r\n        const from = route.matched(pathname(path));\r\n        const to = route.redirect;\r\n        const redirected = route.transfer(from, to);\r\n        // and start over\r\n        return this.search(redirected, this.routes, []);\r\n      } else if (route.children) {\r\n        // Search through the children\r\n        return this.search(path, route.children, matched);\r\n      } else {\r\n        return { matched, path };\r\n      }\r\n    } else {\r\n      // End the search here\r\n      return { matched, path };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Search for the elements that would match the given path.\r\n   * If a redirect is encountered, it will be followed.\r\n   * The resulting path and the matched elements are returned.\r\n   */\r\n  match(path: string): SearchResult {\r\n    return this.search(path, this.routes, []);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Render the given routes.\r\n   * The routes are assumed to be nested.\r\n   */\r\n  async render(matched: Route[]) {\r\n    if (this.root == undefined) {\r\n      return;\r\n    }\r\n\r\n    // Importing early in case both network\r\n    // and device is slow, but not awaiting\r\n    // it just yet.\r\n    const load = Promise.all(matched.map(route => route.import()));\r\n\r\n    // Find the index at which the matched routes\r\n    // differ from the active routes.\r\n    let start;\r\n    for (let i = 0; i < matched.length; i++) {\r\n      const match = matched[i];\r\n      if (this.matched.length < i + 1) {\r\n        start = i;\r\n        break;\r\n      } else {\r\n        const active = this.matched[i];\r\n        if (match !== active) {\r\n          start = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (start == null) {\r\n      start = matched.length;\r\n    }\r\n\r\n    this.matched = matched;\r\n\r\n    // Remove the obsolete elements from the DOM\r\n    const removals = this.elements.slice(start);\r\n    while (removals.length > 0) {\r\n      const element = removals.pop();\r\n      element!.parentElement!.removeChild(element!);\r\n    }\r\n\r\n    // Discard the removed elements\r\n    this.elements = this.elements.slice(0, start);\r\n\r\n    // Wait for any asynchronous components to load\r\n    const components = await load;\r\n    // Create the new elements\r\n    const additions = components\r\n      .slice(start)\r\n      .map((Component: Constructor<HTMLElement>) => new Component());\r\n\r\n    this.elements = this.elements.concat(additions);\r\n\r\n    // Add slot attributes if needed\r\n    for (let i = start; i < this.elements.length; i++) {\r\n      const element: HTMLElement = this.elements[i];\r\n      const route = this.matched[i];\r\n      if (route.slot) {\r\n        element.setAttribute('slot', route.slot);\r\n      }\r\n    }\r\n\r\n    // Combine the newly created elements in order\r\n    // Note: they are not connected to the DOM here\r\n    for (let i = 0; i < additions.length - 1; i++) {\r\n      const parent = additions[i];\r\n      const child = additions[i + 1];\r\n      parent.appendChild(child);\r\n    }\r\n\r\n    // Resolve any new properties\r\n    this.updateProperties();\r\n\r\n    // If there are any additions, they need to be rendered\r\n    if (additions.length > 0) {\r\n      if (start > 0) {\r\n        // Some reuse\r\n        // Connect the new elements to the deepest reused element,\r\n        // implicitly rendering them\r\n        this.elements[start - 1].appendChild(additions[0]);\r\n      } else {\r\n        // No reuse\r\n        this.root.appendChild(this.elements[0]);\r\n      }\r\n    }\r\n\r\n    this.emit('render');\r\n  }\r\n\r\n  /**\r\n   * Update all `:param` bindings and `properties` functions in the tree.\r\n   */\r\n  updateProperties() {\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      const element = this.elements[i];\r\n      const options = customElements.get(\r\n        element.tagName.toLowerCase()\r\n      ).properties;\r\n      const route = this.matched[i];\r\n\r\n      if (options != undefined) {\r\n        const snapshot = route.snapshot(window.location);\r\n        const parameters = snapshot.parameters;\r\n        // Resolve parameters from path\r\n        for (const [key, value] of parameters) {\r\n          if (options.hasOwnProperty(key)) {\r\n            element[key] = value;\r\n          }\r\n        }\r\n\r\n        // Resolve additional properties from route\r\n        const properties = route.properties(snapshot);\r\n        for (const key in properties) {\r\n          if (options.hasOwnProperty(key)) {\r\n            const value = properties[key];\r\n            element[key] = value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all currently active elements.\r\n   */\r\n  teardown() {\r\n    while (this.elements.length > 0) {\r\n      const element = this.elements.pop();\r\n      element!.parentElement!.removeChild(element!);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import Router from './router';\r\nimport { decode } from './utils';\r\n\r\nexport class RouterLink extends HTMLElement {\r\n  static observedAttributes = ['disabled', 'to'];\r\n  static tagName = 'router-link';\r\n  private router: Router;\r\n\r\n  static install() {\r\n    customElements.define(this.tagName, this);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.router = Router.instance;\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  set to(v: string) {\r\n    this.setAttribute('to', v);\r\n  }\r\n\r\n  get to() {\r\n    return this.getAttribute('to') as string;\r\n  }\r\n\r\n  set exact(v: boolean) {\r\n    this.toggleAttribute('exact', v);\r\n    this.active = this.test(decode(location.pathname));\r\n  }\r\n\r\n  get exact(): boolean {\r\n    return this.hasAttribute('exact');\r\n  }\r\n\r\n  set active(v: boolean) {\r\n    this.toggleAttribute('active', v);\r\n  }\r\n\r\n  get active(): boolean {\r\n    return this.hasAttribute('active');\r\n  }\r\n\r\n  set disabled(v: boolean) {\r\n    this.toggleAttribute('disabled', v);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  attributeChangedCallback(attr: string, oldValue: string, newValue: string) {\r\n    if (oldValue === newValue) {\r\n      return;\r\n    }\r\n\r\n    if (attr === 'disabled') {\r\n      const hasValue = newValue != null;\r\n      if (hasValue) {\r\n        this.active = false;\r\n        this.router.off('render', this.onChange);\r\n      } else {\r\n        this.router.on('render', this.onChange);\r\n        this.onChange();\r\n      }\r\n    } else if (attr === 'to') {\r\n      const a = this.querySelector('a');\r\n      if (a) {\r\n        a.href = newValue;\r\n      }\r\n      this.active = this.test(decode(location.pathname));\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const a = this.querySelector('a');\r\n    if (a) {\r\n      if (!this.to) {\r\n        this.to = decode(a.pathname);\r\n      } else {\r\n        a.href = this.to;\r\n      }\r\n    }\r\n    this.addEventListener('click', this.onClick);\r\n    this.router.on('render', this.onChange);\r\n    this.onChange();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.removeEventListener('click', this.onClick);\r\n    this.router.off('render', this.onChange);\r\n  }\r\n\r\n  toggleAttribute(name: string, predicate: boolean) {\r\n    if (predicate != null) {\r\n      if (predicate) {\r\n        this.setAttribute(name, '');\r\n      } else {\r\n        this.removeAttribute(name);\r\n      }\r\n    } else {\r\n      this.toggleAttribute(name, !this.hasAttribute(name));\r\n    }\r\n  }\r\n\r\n  test(path: string): boolean {\r\n    const to = this.to;\r\n    if (to.startsWith('/')) {\r\n      return this.exact\r\n        ? path === to\r\n        : path.startsWith(to);\r\n    } else {\r\n      return path.endsWith(to);\r\n    }\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    if (\r\n      // Ignore clicks with modifiers\r\n      event.metaKey ||\r\n      event.altKey ||\r\n      event.ctrlKey ||\r\n      event.shiftKey ||\r\n      // Ignore prevented clicks\r\n      event.defaultPrevented ||\r\n      // Ignore right mouse button clicks\r\n      (event.button !== undefined &&\r\n      event.button !== 0)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    if (this.disabled || !this.to) {\r\n      return;\r\n    } else {\r\n      this.router.push(this.to);\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    this.active = this.test(decode(location.pathname));\r\n  }\r\n}\r\n\r\nexport default RouterLink;\r\n"],"names":["[object Object]","this","map","Map","type","listener","listeners","has","get","Set","set","add","delete","detail","path","replace","str","decodeURIComponent","temp","split","hash","search","pathname","test","object","tag","Symbol","toStringTag","isNormalFunction","hasOwnProperty","isArrowFunction","__esModule","Object","freeze","create","a","b","v","i","pairs","index","length","result","pair","EMPTY","MATCH_ALL","CATCH_ALL","PARAMETER_PATTERN","MATCH_TRAILING_SLASH","WILDCARD_PATTERN","exact","match","temporary","keys","exec","push","endsWith","pattern","RegExp","matched","Parameters","from","to","values","slice","transferred","super","zip","dictionary","Array","entries","Query","string","queryString","substring","key","value","Path","record","component","redirect","slot","guard","properties","children","customElements","always","empty","child","createChildRoute","identifier","isFunction","called","resolved","Promise","resolve","isModule","default","Route","cache","ctor","import","location","parameters","parse","decode","query","parent","normalize","WeakMap","h","history","onpop","onPopstate","bind","window","addEventListener","removeEventListener","options","data","title","pushState","replaceState","delta","go","EventEmitter","records","isConnected","elements","routes","History","Router","instance","root","connect","render","emit","undefined","teardown","disconnect","route","find","r","matches","redirected","transfer","load","all","start","removals","element","pop","parentElement","removeChild","additions","Component","concat","setAttribute","appendChild","updateProperties","tagName","toLowerCase","snapshot","HTMLElement","router","onClick","onChange","define","getAttribute","toggleAttribute","active","hasAttribute","disabled","attr","oldValue","newValue","off","on","querySelector","href","name","predicate","removeAttribute","startsWith","event","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","RouterLink"],"mappings":"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"}